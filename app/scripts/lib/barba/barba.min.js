!function(t, n) {
'object'==typeof exports&&'undefined'!=typeof module?module.exports=n():'function'==typeof define&&define.amd?define(n):(t=t||self).barba=n();
}(this, (function() {
  function t(t, n) {
    for (let r=0; r<n.length; r++) {
      const e=n[r]; e.enumerable=e.enumerable||!1, e.configurable=!0, 'value'in e&&(e.writable=!0), Object.defineProperty(t, e.key, e);
    }
  } function n(n, r, e) {
    return r&&t(n.prototype, r), e&&t(n, e), n;
  } function r() {
    return (r=Object.assign||function(t) {
      for (let n=1; n<arguments.length; n++) {
        const r=arguments[n]; for (const e in r)Object.prototype.hasOwnProperty.call(r, e)&&(t[e]=r[e]);
      } return t;
    }).apply(this, arguments);
  } function e(t, n) {
    t.prototype=Object.create(n.prototype), t.prototype.constructor=t, t.__proto__=n;
  } function i(t) {
    return (i=Object.setPrototypeOf?Object.getPrototypeOf:function(t) {
      return t.__proto__||Object.getPrototypeOf(t);
    })(t);
  } function o(t, n) {
    return (o=Object.setPrototypeOf||function(t, n) {
      return t.__proto__=n, t;
    })(t, n);
  } function u(t, n, r) {
    return (u=function() {
      if ('undefined'==typeof Reflect||!Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ('function'==typeof Proxy) return !0; try {
        return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0;
      } catch (t) {
        return !1;
      }
    }()?Reflect.construct:function(t, n, r) {
      const e=[null]; e.push.apply(e, n); const i=new(Function.bind.apply(t, e)); return r&&o(i, r.prototype), i;
    }).apply(null, arguments);
  } function f(t) {
    const n='function'==typeof Map?new Map:void 0; return (f=function(t) {
      if (null===t||-1===Function.toString.call(t).indexOf('[native code]')) return t; if ('function'!=typeof t) throw new TypeError('Super expression must either be null or a function'); if (void 0!==n) {
        if (n.has(t)) return n.get(t); n.set(t, r);
      } function r() {
        return u(t, arguments, i(this).constructor);
      } return r.prototype=Object.create(t.prototype, {constructor: {value: r, enumerable: !1, writable: !0, configurable: !0}}), o(r, t);
    })(t);
  } function s(t, n) {
    try {
      var r=t();
    } catch (t) {
      return n(t);
    } return r&&r.then?r.then(void 0, n):r;
  }'undefined'!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol('Symbol.iterator'))), 'undefined'!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol('Symbol.asyncIterator'))); let c; const a='2.9.7'; const h=function() {}; !function(t) {
    t[t.off=0]='off', t[t.error=1]='error', t[t.warning=2]='warning', t[t.info=3]='info', t[t.debug=4]='debug';
  }(c||(c={})); let v=c.off; const l=function() {
    function t(t) {
      this.t=t;
    }t.getLevel=function() {
      return v;
    }, t.setLevel=function(t) {
      return v=c[t];
    }; const n=t.prototype; return n.error=function() {
      for (var t=arguments.length, n=new Array(t), r=0; r<t; r++)n[r]=arguments[r]; this.i(console.error, c.error, n);
    }, n.warn=function() {
      for (var t=arguments.length, n=new Array(t), r=0; r<t; r++)n[r]=arguments[r]; this.i(console.warn, c.warning, n);
    }, n.info=function() {
      for (var t=arguments.length, n=new Array(t), r=0; r<t; r++)n[r]=arguments[r]; this.i(console.info, c.info, n);
    }, n.debug=function() {
      for (var t=arguments.length, n=new Array(t), r=0; r<t; r++)n[r]=arguments[r]; this.i(console.log, c.debug, n);
    }, n.i=function(n, r, e) {
      r<=t.getLevel()&&n.apply(console, ['['+this.t+'] '].concat(e));
    }, t;
  }(); const d=O; const m=E; const p=g; const w=x; const b=T; const y='/'; const P=new RegExp(['(\\\\.)', '(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?'].join('|'), 'g'); function g(t, n) {
    for (var r, e=[], i=0, o=0, u='', f=n&&n.delimiter||y, s=n&&n.whitelist||void 0, c=!1; null!==(r=P.exec(t));) {
      const a=r[0]; const h=r[1]; const v=r.index; if (u+=t.slice(o, v), o=v+a.length, h)u+=h[1], c=!0; else {
        let l=''; const d=r[2]; const m=r[3]; const p=r[4]; const w=r[5]; if (!c&&u.length) {
          const b=u.length-1; const g=u[b]; (!s||s.indexOf(g)>-1)&&(l=g, u=u.slice(0, b));
        }u&&(e.push(u), u='', c=!1); const E=m||p; const x=l||f; e.push({name: d||i++, prefix: l, delimiter: x, optional: '?'===w||'*'===w, repeat: '+'===w||'*'===w, pattern: E?A(E):'[^'+k(x===f?x:x+f)+']+?'});
      }
    } return (u||o<t.length)&&e.push(u+t.substr(o)), e;
  } function E(t, n) {
    return function(r, e) {
      const i=t.exec(r); if (!i) return !1; for (var o=i[0], u=i.index, f={}, s=e&&e.decode||decodeURIComponent, c=1; c<i.length; c++) {
        if (void 0!==i[c]) {
          var a=n[c-1]; f[a.name]=a.repeat?i[c].split(a.delimiter).map((function(t) {
            return s(t, a);
          })):s(i[c], a);
        }
      } return {path: o, index: u, params: f};
    };
  } function x(t, n) {
    for (var r=new Array(t.length), e=0; e<t.length; e++)'object'==typeof t[e]&&(r[e]=new RegExp('^(?:'+t[e].pattern+')$', R(n))); return function(n, e) {
      for (var i='', o=e&&e.encode||encodeURIComponent, u=!e||!1!==e.validate, f=0; f<t.length; f++) {
        const s=t[f]; if ('string'!=typeof s) {
          var c; const a=n?n[s.name]:void 0; if (Array.isArray(a)) {
            if (!s.repeat) throw new TypeError('Expected "'+s.name+'" to not repeat, but got array'); if (0===a.length) {
              if (s.optional) continue; throw new TypeError('Expected "'+s.name+'" to not be empty');
            } for (let h=0; h<a.length; h++) {
              if (c=o(a[h], s), u&&!r[f].test(c)) throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'"'); i+=(0===h?s.prefix:s.delimiter)+c;
            }
          } else if ('string'!=typeof a&&'number'!=typeof a&&'boolean'!=typeof a) {
            if (!s.optional) throw new TypeError('Expected "'+s.name+'" to be '+(s.repeat?'an array':'a string'));
          } else {
            if (c=o(String(a), s), u&&!r[f].test(c)) throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but got "'+c+'"'); i+=s.prefix+c;
          }
        } else i+=s;
      } return i;
    };
  } function k(t) {
    return t.replace(/([.+*?=^!:${}()[\]|/\\])/g, '\\$1');
  } function A(t) {
    return t.replace(/([=!:$/()])/g, '\\$1');
  } function R(t) {
    return t&&t.sensitive?'':'i';
  } function T(t, n, r) {
    for (var e=(r=r||{}).strict, i=!1!==r.start, o=!1!==r.end, u=r.delimiter||y, f=[].concat(r.endsWith||[]).map(k).concat('$').join('|'), s=i?'^':'', c=0; c<t.length; c++) {
      const a=t[c]; if ('string'==typeof a)s+=k(a); else {
        const h=a.repeat?'(?:'+a.pattern+')(?:'+k(a.delimiter)+'(?:'+a.pattern+'))*':a.pattern; n&&n.push(a), s+=a.optional?a.prefix?'(?:'+k(a.prefix)+'('+h+'))?':'('+h+')?':k(a.prefix)+'('+h+')';
      }
    } if (o)e||(s+='(?:'+k(u)+')?'), s+='$'===f?'$':'(?='+f+')'; else {
      const v=t[t.length-1]; const l='string'==typeof v?v[v.length-1]===u:void 0===v; e||(s+='(?:'+k(u)+'(?='+f+'))?'), l||(s+='(?='+k(u)+'|'+f+')');
    } return new RegExp(s, R(r));
  } function O(t, n, r) {
    return t instanceof RegExp?function(t, n) {
      if (!n) return t; const r=t.source.match(/\((?!\?)/g); if (r) for (let e=0; e<r.length; e++)n.push({name: e, prefix: null, delimiter: null, optional: !1, repeat: !1, pattern: null}); return t;
    }(t, n):Array.isArray(t)?function(t, n, r) {
      for (var e=[], i=0; i<t.length; i++)e.push(O(t[i], n, r).source); return new RegExp('(?:'+e.join('|')+')', R(r));
    }(t, n, r):function(t, n, r) {
      return T(g(t, r), n, r);
    }(t, n, r);
  }d.match=function(t, n) {
    const r=[]; return E(O(t, r, n), r);
  }, d.regexpToFunction=m, d.parse=p, d.compile=function(t, n) {
    return x(g(t, n), n);
  }, d.tokensToFunction=w, d.tokensToRegExp=b; const S={container: 'container', history: 'history', namespace: 'namespace', prefix: 'data-barba', prevent: 'prevent', wrapper: 'wrapper'}; const j=new(function() {
    function t() {
      this.o=S, this.u=new DOMParser;
    } const n=t.prototype; return n.toString=function(t) {
      return t.outerHTML;
    }, n.toDocument=function(t) {
      return this.u.parseFromString(t, 'text/html');
    }, n.toElement=function(t) {
      const n=document.createElement('div'); return n.innerHTML=t, n;
    }, n.getHtml=function(t) {
      return void 0===t&&(t=document), this.toString(t.documentElement);
    }, n.getWrapper=function(t) {
      return void 0===t&&(t=document), t.querySelector('['+this.o.prefix+'="'+this.o.wrapper+'"]');
    }, n.getContainer=function(t) {
      return void 0===t&&(t=document), t.querySelector('['+this.o.prefix+'="'+this.o.container+'"]');
    }, n.removeContainer=function(t) {
      document.body.contains(t)&&t.parentNode.removeChild(t);
    }, n.addContainer=function(t, n) {
      const r=this.getContainer(); r?this.s(t, r):n.appendChild(t);
    }, n.getNamespace=function(t) {
      void 0===t&&(t=document); const n=t.querySelector('['+this.o.prefix+'-'+this.o.namespace+']'); return n?n.getAttribute(this.o.prefix+'-'+this.o.namespace):null;
    }, n.getHref=function(t) {
      if (t.tagName&&'a'===t.tagName.toLowerCase()) {
        if ('string'==typeof t.href) return t.href; const n=t.getAttribute('href')||t.getAttribute('xlink:href'); if (n) return this.resolveUrl(n.baseVal||n);
      } return null;
    }, n.resolveUrl=function() {
      for (var t=arguments.length, n=new Array(t), r=0; r<t; r++)n[r]=arguments[r]; const e=n.length; if (0===e) throw new Error('resolveUrl requires at least one argument; got none.'); const i=document.createElement('base'); if (i.href=arguments[0], 1===e) return i.href; const o=document.getElementsByTagName('head')[0]; o.insertBefore(i, o.firstChild); for (var u, f=document.createElement('a'), s=1; s<e; s++)f.href=arguments[s], i.href=u=f.href; return o.removeChild(i), u;
    }, n.s=function(t, n) {
      n.parentNode.insertBefore(t, n.nextSibling);
    }, t;
  }()); const M=new(function() {
    function t() {
      this.h=[], this.v=-1;
    } const e=t.prototype; return e.init=function(t, n) {
      this.l='barba'; const r={ns: n, scroll: {x: window.scrollX, y: window.scrollY}, url: t}; this.h.push(r), this.v=0; const e={from: this.l, index: 0, states: [].concat(this.h)}; window.history&&window.history.replaceState(e, '', t);
    }, e.change=function(t, n, r) {
      if (r&&r.state) {
        const e=r.state; const i=e.index; n=this.m(this.v-i), this.replace(e.states), this.v=i;
      } else this.add(t, n); return n;
    }, e.add=function(t, n) {
      const r=this.size; const e=this.p(n); const i={ns: 'tmp', scroll: {x: window.scrollX, y: window.scrollY}, url: t}; this.h.push(i), this.v=r; const o={from: this.l, index: r, states: [].concat(this.h)}; switch (e) {
        case 'push': window.history&&window.history.pushState(o, '', t); break; case 'replace': window.history&&window.history.replaceState(o, '', t);
      }
    }, e.update=function(t, n) {
      const e=n||this.v; const i=r({}, this.get(e), {}, t); this.set(e, i);
    }, e.remove=function(t) {
t?this.h.splice(t, 1):this.h.pop(), this.v--;
    }, e.clear=function() {
      this.h=[], this.v=-1;
    }, e.replace=function(t) {
      this.h=t;
    }, e.get=function(t) {
      return this.h[t];
    }, e.set=function(t, n) {
      return this.h[t]=n;
    }, e.p=function(t) {
      let n='push'; const r=t; const e=S.prefix+'-'+S.history; return r.hasAttribute&&r.hasAttribute(e)&&(n=r.getAttribute(e)), n;
    }, e.m=function(t) {
      return Math.abs(t)>1?t>0?'forward':'back':0===t?'popstate':t>0?'back':'forward';
    }, n(t, [{key: 'current', get: function() {
      return this.h[this.v];
    }}, {key: 'state', get: function() {
      return this.h[this.h.length-1];
    }}, {key: 'previous', get: function() {
      return this.v<1?null:this.h[this.v-1];
    }}, {key: 'size', get: function() {
      return this.h.length;
    }}]), t;
  }()); const L=function(t, n) {
    try {
      const r=function() {
        if (!n.next.html) {
          return Promise.resolve(t).then((function(t) {
            const r=n.next; if (t) {
              const e=j.toElement(t); r.namespace=j.getNamespace(e), r.container=j.getContainer(e), r.html=t, M.update({ns: r.namespace}); const i=j.toDocument(t); document.title=i.title;
            }
          }));
        }
      }(); return Promise.resolve(r&&r.then?r.then((function() {})):void 0);
    } catch (t) {
      return Promise.reject(t);
    }
  }; const $=d; const _={__proto__: null, update: L, nextTick: function() {
    return new Promise((function(t) {
      window.requestAnimationFrame(t);
    }));
  }, pathToRegexp: $}; const q=function() {
    return window.location.origin;
  }; const B=function(t) {
    return void 0===t&&(t=window.location.href), U(t).port;
  }; var U=function(t) {
    let n; const r=t.match(/:\d+/); if (null===r)/^http/.test(t)&&(n=80), /^https/.test(t)&&(n=443); else {
      const e=r[0].substring(1); n=parseInt(e, 10);
    } let i; let o=t.replace(q(), ''); let u={}; const f=o.indexOf('#'); f>=0&&(i=o.slice(f+1), o=o.slice(0, f)); const s=o.indexOf('?'); return s>=0&&(u=D(o.slice(s+1)), o=o.slice(0, s)), {hash: i, path: o, port: n, query: u};
  }; var D=function(t) {
    return t.split('&').reduce((function(t, n) {
      const r=n.split('='); return t[r[0]]=r[1], t;
    }), {});
  }; const F=function(t) {
    return void 0===t&&(t=window.location.href), t.replace(/(\/#.*|\/|#.*)$/, '');
  }; const H={__proto__: null, getHref: function() {
    return window.location.href;
  }, getOrigin: q, getPort: B, getPath: function(t) {
    return void 0===t&&(t=window.location.href), U(t).path;
  }, parse: U, parseQuery: D, clean: F}; function I(t, n, r) {
    return void 0===n&&(n=2e3), new Promise((function(e, i) {
      const o=new XMLHttpRequest; o.onreadystatechange=function() {
        if (o.readyState===XMLHttpRequest.DONE) {
          if (200===o.status)e(o.responseText); else if (o.status) {
            const n={status: o.status, statusText: o.statusText}; r(t, n), i(n);
          }
        }
      }, o.ontimeout=function() {
        const e=new Error('Timeout error ['+n+']'); r(t, e), i(e);
      }, o.onerror=function() {
        const n=new Error('Fetch error'); r(t, n), i(n);
      }, o.open('GET', t), o.timeout=n, o.setRequestHeader('Accept', 'text/html,application/xhtml+xml,application/xml'), o.setRequestHeader('x-barba', 'yes'), o.send();
    }));
  } const C=function(t) {
    return !!t&&('object'==typeof t||'function'==typeof t)&&'function'==typeof t.then;
  }; function N(t, n) {
    return void 0===n&&(n={}), function() {
      for (var r=arguments.length, e=new Array(r), i=0; i<r; i++)e[i]=arguments[i]; let o=!1; const u=new Promise((function(r, i) {
        n.async=function() {
          return o=!0, function(t, n) {
t?i(t):r(n);
          };
        }; const u=t.apply(n, e); o||(C(u)?u.then(r, i):r(u));
      })); return u;
    };
  } const X=new(function(t) {
    function n() {
      let n; return (n=t.call(this)||this).logger=new l('@barba/core'), n.all=['ready', 'page', 'reset', 'currentAdded', 'currentRemoved', 'nextAdded', 'nextRemoved', 'beforeOnce', 'once', 'afterOnce', 'before', 'beforeLeave', 'leave', 'afterLeave', 'beforeEnter', 'enter', 'afterEnter', 'after'], n.registered=new Map, n.init(), n;
    }e(n, t); const r=n.prototype; return r.init=function() {
      const t=this; this.registered.clear(), this.all.forEach((function(n) {
        t[n]||(t[n]=function(r, e) {
          t.registered.has(n)||t.registered.set(n, new Set), t.registered.get(n).add({ctx: e||{}, fn: r});
        });
      }));
    }, r.do=function(t) {
      for (var n=this, r=arguments.length, e=new Array(r>1?r-1:0), i=1; i<r; i++)e[i-1]=arguments[i]; if (this.registered.has(t)) {
        let o=Promise.resolve(); return this.registered.get(t).forEach((function(t) {
          o=o.then((function() {
            return N(t.fn, t.ctx).apply(void 0, e);
          }));
        })), o.catch((function(r) {
          n.logger.debug('Hook error ['+t+']'), n.logger.error(r);
        }));
      } return Promise.resolve();
    }, r.clear=function() {
      const t=this; this.all.forEach((function(n) {
        delete t[n];
      })), this.init();
    }, r.help=function() {
      this.logger.info('Available hooks: '+this.all.join(',')); const t=[]; this.registered.forEach((function(n, r) {
        return t.push(r);
      })), this.logger.info('Registered hooks: '+t.join(','));
    }, n;
  }(h)); const z=function() {
    function t(t) {
      if (this.P=[], 'boolean'==typeof t) this.g=t; else {
        const n=Array.isArray(t)?t:[t]; this.P=n.map((function(t) {
          return $(t);
        }));
      }
    } return t.prototype.checkHref=function(t) {
      if ('boolean'==typeof this.g) return this.g; const n=U(t).path; return this.P.some((function(t) {
        return null!==t.exec(n);
      }));
    }, t;
  }(); const G=function(t) {
    function n(n) {
      let r; return (r=t.call(this, n)||this).k=new Map, r;
    }e(n, t); const i=n.prototype; return i.set=function(t, n, r) {
      return this.k.set(t, {action: r, request: n}), {action: r, request: n};
    }, i.get=function(t) {
      return this.k.get(t);
    }, i.getRequest=function(t) {
      return this.k.get(t).request;
    }, i.getAction=function(t) {
      return this.k.get(t).action;
    }, i.has=function(t) {
      return !this.checkHref(t)&&this.k.has(t);
    }, i.delete=function(t) {
      return this.k.delete(t);
    }, i.update=function(t, n) {
      const e=r({}, this.k.get(t), {}, n); return this.k.set(t, e), e;
    }, n;
  }(z); const Q=function() {
    return !window.history.pushState;
  }; const W=function(t) {
    return !t.el||!t.href;
  }; const J=function(t) {
    const n=t.event; return n.which>1||n.metaKey||n.ctrlKey||n.shiftKey||n.altKey;
  }; const K=function(t) {
    const n=t.el; return n.hasAttribute('target')&&'_blank'===n.target;
  }; const V=function(t) {
    const n=t.el; return void 0!==n.protocol&&window.location.protocol!==n.protocol||void 0!==n.hostname&&window.location.hostname!==n.hostname;
  }; const Y=function(t) {
    const n=t.el; return void 0!==n.port&&B()!==B(n.href);
  }; const Z=function(t) {
    const n=t.el; return n.getAttribute&&'string'==typeof n.getAttribute('download');
  }; const tt=function(t) {
    return t.el.hasAttribute(S.prefix+'-'+S.prevent);
  }; const nt=function(t) {
    return Boolean(t.el.closest('['+S.prefix+'-'+S.prevent+'="all"]'));
  }; const rt=function(t) {
    const n=t.href; return F(n)===F()&&B(n)===B();
  }; const et=function(t) {
    function n(n) {
      let r; return (r=t.call(this, n)||this).suite=[], r.tests=new Map, r.init(), r;
    }e(n, t); const r=n.prototype; return r.init=function() {
      this.add('pushState', Q), this.add('exists', W), this.add('newTab', J), this.add('blank', K), this.add('corsDomain', V), this.add('corsPort', Y), this.add('download', Z), this.add('preventSelf', tt), this.add('preventAll', nt), this.add('sameUrl', rt, !1);
    }, r.add=function(t, n, r) {
      void 0===r&&(r=!0), this.tests.set(t, n), r&&this.suite.push(t);
    }, r.run=function(t, n, r, e) {
      return this.tests.get(t)({el: n, event: r, href: e});
    }, r.checkLink=function(t, n, r) {
      const e=this; return this.suite.some((function(i) {
        return e.run(i, t, n, r);
      }));
    }, n;
  }(z); const it=function(t) {
    function n(r, e) {
      let i; void 0===e&&(e='Barba error'); for (var o=arguments.length, u=new Array(o>2?o-2:0), f=2; f<o; f++)u[f-2]=arguments[f]; return (i=t.call.apply(t, [this].concat(u))||this).error=r, i.label=e, Error.captureStackTrace&&Error.captureStackTrace(function(t) {
        if (void 0===t) throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called'); return t;
      }(i), n), i.name='BarbaError', i;
    } return e(n, t), n;
  }(f(Error)); const ot=function() {
    function t(t) {
      void 0===t&&(t=[]), this.logger=new l('@barba/core'), this.all=[], this.page=[], this.once=[], this.A=[{name: 'namespace', type: 'strings'}, {name: 'custom', type: 'function'}], t&&(this.all=this.all.concat(t)), this.update();
    } const n=t.prototype; return n.add=function(t, n) {
      switch (t) {
        case 'rule': this.A.splice(n.position||0, 0, n.value); break; case 'transition': default: this.all.push(n);
      } this.update();
    }, n.resolve=function(t, n) {
      const r=this; void 0===n&&(n={}); let e=n.once?this.once:this.page; e=e.filter(n.self?function(t) {
        return t.name&&'self'===t.name;
      }:function(t) {
        return !t.name||'self'!==t.name;
      }); const i=new Map; const o=e.find((function(e) {
        let o=!0; const u={}; return !(!n.self||'self'!==e.name)||(r.A.reverse().forEach((function(n) {
          o&&(o=r.R(e, n, t, u), e.from&&e.to&&(o=r.R(e, n, t, u, 'from')&&r.R(e, n, t, u, 'to')), e.from&&!e.to&&(o=r.R(e, n, t, u, 'from')), !e.from&&e.to&&(o=r.R(e, n, t, u, 'to')));
        })), i.set(e, u), o);
      })); const u=i.get(o); const f=[]; if (f.push(n.once?'once':'page'), n.self&&f.push('self'), u) {
        let s; const c=[o]; Object.keys(u).length>0&&c.push(u), (s=this.logger).info.apply(s, ['Transition found ['+f.join(',')+']'].concat(c));
      } else this.logger.info('No transition found ['+f.join(',')+']'); return o;
    }, n.update=function() {
      const t=this; this.all=this.all.map((function(n) {
        return t.T(n);
      })).sort((function(t, n) {
        return t.priority-n.priority;
      })).reverse().map((function(t) {
        return delete t.priority, t;
      })), this.page=this.all.filter((function(t) {
        return void 0!==t.leave||void 0!==t.enter;
      })), this.once=this.all.filter((function(t) {
        return void 0!==t.once;
      }));
    }, n.R=function(t, n, r, e, i) {
      let o=!0; let u=!1; const f=t; const s=n.name; const c=s; const a=s; const h=s; const v=i?f[i]:f; const l='to'===i?r.next:r.current; if (i?v&&v[s]:v[s]) {
        switch (n.type) {
          case 'strings': default: var d=Array.isArray(v[c])?v[c]:[v[c]]; l[c]&&-1!==d.indexOf(l[c])&&(u=!0), -1===d.indexOf(l[c])&&(o=!1); break; case 'object': var m=Array.isArray(v[a])?v[a]:[v[a]]; l[a]?(l[a].name&&-1!==m.indexOf(l[a].name)&&(u=!0), -1===m.indexOf(l[a].name)&&(o=!1)):o=!1; break; case 'function': v[h](r)?u=!0:o=!1;
        }u&&(i?(e[i]=e[i]||{}, e[i][s]=f[i][s]):e[s]=f[s]);
      } return o;
    }, n.O=function(t, n, r) {
      let e=0; return (t[n]||t.from&&t.from[n]||t.to&&t.to[n])&&(e+=Math.pow(10, r), t.from&&t.from[n]&&(e+=1), t.to&&t.to[n]&&(e+=2)), e;
    }, n.T=function(t) {
      const n=this; t.priority=0; let r=0; return this.A.forEach((function(e, i) {
        r+=n.O(t, e.name, i+1);
      })), t.priority=r, t;
    }, t;
  }(); const ut=function() {
    function t(t) {
      void 0===t&&(t=[]), this.logger=new l('@barba/core'), this.S=!1, this.store=new ot(t);
    } const r=t.prototype; return r.get=function(t, n) {
      return this.store.resolve(t, n);
    }, r.doOnce=function(t) {
      const n=t.data; const r=t.transition; try {
        const e=function() {
          i.S=!1;
        }; var i=this; const o=r||{}; i.S=!0; const u=s((function() {
          return Promise.resolve(i.j('beforeOnce', n, o)).then((function() {
            return Promise.resolve(i.once(n, o)).then((function() {
              return Promise.resolve(i.j('afterOnce', n, o)).then((function() {}));
            }));
          }));
        }), (function(t) {
          i.S=!1, i.logger.debug('Transition error [before/after/once]'), i.logger.error(t);
        })); return Promise.resolve(u&&u.then?u.then(e):e());
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.doPage=function(t) {
      const n=t.data; const r=t.transition; const e=t.page; const i=t.wrapper; try {
        const o=function(t) {
          if (u) return t; f.S=!1;
        }; var u=!1; var f=this; const c=r||{}; const a=!0===c.sync||!1; f.S=!0; const h=s((function() {
          function t() {
            return Promise.resolve(f.j('before', n, c)).then((function() {
              const t=!1; function r(r) {
                return t?r:Promise.resolve(f.remove(n)).then((function() {
                  return Promise.resolve(f.j('after', n, c)).then((function() {}));
                }));
              } const o=function() {
                if (a) {
                  return s((function() {
                    return Promise.resolve(f.add(n, i)).then((function() {
                      return Promise.resolve(f.j('beforeLeave', n, c)).then((function() {
                        return Promise.resolve(f.j('beforeEnter', n, c)).then((function() {
                          return Promise.resolve(Promise.all([f.leave(n, c), f.enter(n, c)])).then((function() {
                            return Promise.resolve(f.j('afterLeave', n, c)).then((function() {
                              return Promise.resolve(f.j('afterEnter', n, c)).then((function() {}));
                            }));
                          }));
                        }));
                      }));
                    }));
                  }), (function(t) {
                    if (f.M(t)) throw new it(t, 'Transition error [sync]');
                  }));
                } const r=function(r) {
                  return t?r:s((function() {
                    const t=function() {
                      if (!1!==o) {
                        return Promise.resolve(f.add(n, i)).then((function() {
                          return Promise.resolve(f.j('beforeEnter', n, c)).then((function() {
                            return Promise.resolve(f.enter(n, c, o)).then((function() {
                              return Promise.resolve(f.j('afterEnter', n, c)).then((function() {}));
                            }));
                          }));
                        }));
                      }
                    }(); if (t&&t.then) return t.then((function() {}));
                  }), (function(t) {
                    if (f.M(t)) throw new it(t, 'Transition error [before/after/enter]');
                  }));
                }; var o=!1; const u=s((function() {
                  return Promise.resolve(f.j('beforeLeave', n, c)).then((function() {
                    return Promise.resolve(Promise.all([f.leave(n, c), L(e, n)]).then((function(t) {
                      return t[0];
                    }))).then((function(t) {
                      return o=t, Promise.resolve(f.j('afterLeave', n, c)).then((function() {}));
                    }));
                  }));
                }), (function(t) {
                  if (f.M(t)) throw new it(t, 'Transition error [before/after/leave]');
                })); return u&&u.then?u.then(r):r(u);
              }(); return o&&o.then?o.then(r):r(o);
            }));
          } const r=function() {
            if (a) return Promise.resolve(L(e, n)).then((function() {}));
          }(); return r&&r.then?r.then(t):t();
        }), (function(t) {
          if (f.S=!1, t.name&&'BarbaError'===t.name) throw f.logger.debug(t.label), f.logger.error(t.error), t; throw f.logger.debug('Transition error [page]'), f.logger.error(t), t;
        })); return Promise.resolve(h&&h.then?h.then(o):o(h));
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.once=function(t, n) {
      try {
        return Promise.resolve(X.do('once', t, n)).then((function() {
          return n.once?N(n.once, n)(t):Promise.resolve();
        }));
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.leave=function(t, n) {
      try {
        return Promise.resolve(X.do('leave', t, n)).then((function() {
          return n.leave?N(n.leave, n)(t):Promise.resolve();
        }));
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.enter=function(t, n, r) {
      try {
        return Promise.resolve(X.do('enter', t, n)).then((function() {
          return n.enter?N(n.enter, n)(t, r):Promise.resolve();
        }));
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.add=function(t, n) {
      try {
        return j.addContainer(t.next.container, n), X.do('nextAdded', t), Promise.resolve();
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.remove=function(t) {
      try {
        return j.removeContainer(t.current.container), X.do('currentRemoved', t), Promise.resolve();
      } catch (t) {
        return Promise.reject(t);
      }
    }, r.M=function(t) {
      return t.message?!/Timeout error|Fetch error/.test(t.message):!t.status;
    }, r.j=function(t, n, r) {
      try {
        return Promise.resolve(X.do(t, n, r)).then((function() {
          return r[t]?N(r[t], r)(n):Promise.resolve();
        }));
      } catch (t) {
        return Promise.reject(t);
      }
    }, n(t, [{key: 'isRunning', get: function() {
      return this.S;
    }, set: function(t) {
      this.S=t;
    }}, {key: 'hasOnce', get: function() {
      return this.store.once.length>0;
    }}, {key: 'hasSelf', get: function() {
      return this.store.all.some((function(t) {
        return 'self'===t.name;
      }));
    }}, {key: 'shouldWait', get: function() {
      return this.store.all.some((function(t) {
        return t.to&&!t.to.route||t.sync;
      }));
    }}]), t;
  }(); const ft=function() {
    function t(t) {
      const n=this; this.names=['beforeLeave', 'afterLeave', 'beforeEnter', 'afterEnter'], this.byNamespace=new Map, 0!==t.length&&(t.forEach((function(t) {
        n.byNamespace.set(t.namespace, t);
      })), this.names.forEach((function(t) {
        X[t](n.L(t));
      })));
    } return t.prototype.L=function(t) {
      const n=this; return function(r) {
        const e=t.match(/enter/i)?r.next:r.current; const i=n.byNamespace.get(e.namespace); return i&&i[t]?N(i[t], i)(r):Promise.resolve();
      };
    }, t;
  }(); Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector), Element.prototype.closest||(Element.prototype.closest=function(t) {
    let n=this; do {
      if (n.matches(t)) return n; n=n.parentElement||n.parentNode;
    } while (null!==n&&1===n.nodeType);return null;
  }); const st={container: null, html: '', namespace: '', url: {hash: '', href: '', path: '', port: null, query: {}}}; return new(function() {
    function t() {
      this.version=a, this.schemaPage=st, this.Logger=l, this.logger=new l('@barba/core'), this.plugins=[], this.hooks=X, this.dom=j, this.helpers=_, this.history=M, this.request=I, this.url=H;
    } const e=t.prototype; return e.use=function(t, n) {
      const r=this.plugins; r.indexOf(t)>-1?this.logger.warn('Plugin ['+t.name+'] already installed.'):'function'==typeof t.install?(t.install(this, n), r.push(t)):this.logger.warn('Plugin ['+t.name+'] has no "install" method.');
    }, e.init=function(t) {
      const n=void 0===t?{}:t; const e=n.transitions; const i=void 0===e?[]:e; const o=n.views; const u=void 0===o?[]:o; const f=n.schema; const s=void 0===f?S:f; const c=n.requestError; const a=n.timeout; const h=void 0===a?2e3:a; const v=n.cacheIgnore; const d=void 0!==v&&v; const m=n.prefetchIgnore; const p=void 0!==m&&m; const w=n.preventRunning; const b=void 0!==w&&w; const y=n.prevent; const P=void 0===y?null:y; const g=n.debug; const E=n.logLevel; if (l.setLevel(!0===(void 0!==g&&g)?'debug':void 0===E?'off':E), this.logger.info(this.version), Object.keys(s).forEach((function(t) {
        S[t]&&(S[t]=s[t]);
      })), this.$=c, this.timeout=h, this.cacheIgnore=d, this.prefetchIgnore=p, this.preventRunning=b, this._=this.dom.getWrapper(), !this._) throw new Error('[@barba/core] No Barba wrapper found'); this._.setAttribute('aria-live', 'polite'), this.q(); const x=this.data.current; if (!x.container) throw new Error('[@barba/core] No Barba container found'); if (this.cache=new G(d), this.prevent=new et(p), this.transitions=new ut(i), this.views=new ft(u), null!==P) {
        if ('function'!=typeof P) throw new Error('[@barba/core] Prevent should be a function'); this.prevent.add('preventCustom', P);
      } this.history.init(x.url.href, x.namespace), this.B=this.B.bind(this), this.U=this.U.bind(this), this.D=this.D.bind(this), this.F(), this.plugins.forEach((function(t) {
        return t.init();
      })); const k=this.data; k.trigger='barba', k.next=k.current, k.current=r({}, this.schemaPage), this.hooks.do('ready', k), this.once(k), this.q();
    }, e.destroy=function() {
      this.q(), this.H(), this.history.clear(), this.hooks.clear(), this.plugins=[];
    }, e.force=function(t) {
      window.location.assign(t);
    }, e.go=function(t, n, r) {
      let e; if (void 0===n&&(n='barba'), this.transitions.isRunning) this.force(t); else if (!(e='popstate'===n?this.history.current&&this.url.getPath(this.history.current.url)===this.url.getPath(t):this.prevent.run('sameUrl', null, null, t))||this.transitions.hasSelf) return n=this.history.change(t, n, r), r&&(r.stopPropagation(), r.preventDefault()), this.page(t, n, e);
    }, e.once=function(t) {
      try {
        const n=this; return Promise.resolve(n.hooks.do('beforeEnter', t)).then((function() {
          function r() {
            return Promise.resolve(n.hooks.do('afterEnter', t)).then((function() {}));
          } const e=function() {
            if (n.transitions.hasOnce) {
              const r=n.transitions.get(t, {once: !0}); return Promise.resolve(n.transitions.doOnce({transition: r, data: t})).then((function() {}));
            }
          }(); return e&&e.then?e.then(r):r();
        }));
      } catch (t) {
        return Promise.reject(t);
      }
    }, e.page=function(t, n, e) {
      try {
        const i=function() {
          const t=o.data; return Promise.resolve(o.hooks.do('page', t)).then((function() {
            const n=s((function() {
              const n=o.transitions.get(t, {once: !1, self: e}); return Promise.resolve(o.transitions.doPage({data: t, page: u, transition: n, wrapper: o._})).then((function() {
                o.q();
              }));
            }), (function() {
              0===l.getLevel()&&o.force(t.current.url.href);
            })); if (n&&n.then) return n.then((function() {}));
          }));
        }; var o=this; o.data.next.url=r({href: t}, o.url.parse(t)), o.data.trigger=n; var u=o.cache.has(t)?o.cache.update(t, {action: 'click'}).request:o.cache.set(t, o.request(t, o.timeout, o.onRequestError.bind(o, n)), 'click').request; const f=function() {
          if (o.transitions.shouldWait) return Promise.resolve(L(u, o.data)).then((function() {}));
        }(); return Promise.resolve(f&&f.then?f.then(i):i());
      } catch (t) {
        return Promise.reject(t);
      }
    }, e.onRequestError=function(t) {
      this.transitions.isRunning=!1; for (var n=arguments.length, r=new Array(n>1?n-1:0), e=1; e<n; e++)r[e-1]=arguments[e]; const i=r[0]; const o=r[1]; const u=this.cache.getAction(i); return this.cache.delete(i), !(this.$&&!1===this.$(t, u, i, o)||('click'===u&&this.force(i), 1));
    }, e.prefetch=function(t) {
      const n=this; this.cache.has(t)||this.cache.set(t, this.request(t, this.timeout, this.onRequestError.bind(this, 'barba')).catch((function(t) {
        n.logger.error(t);
      })), 'prefetch');
    }, e.F=function() {
      !0!==this.prefetchIgnore&&(document.addEventListener('mouseover', this.B), document.addEventListener('touchstart', this.B)), document.addEventListener('click', this.U), window.addEventListener('popstate', this.D);
    }, e.H=function() {
      !0!==this.prefetchIgnore&&(document.removeEventListener('mouseover', this.B), document.removeEventListener('touchstart', this.B)), document.removeEventListener('click', this.U), window.removeEventListener('popstate', this.D);
    }, e.B=function(t) {
      const n=this; const r=this.I(t); if (r) {
        const e=this.dom.getHref(r); this.prevent.checkHref(e)||this.cache.has(e)||this.cache.set(e, this.request(e, this.timeout, this.onRequestError.bind(this, r)).catch((function(t) {
          n.logger.error(t);
        })), 'enter');
      }
    }, e.U=function(t) {
      const n=this.I(t); if (n) return this.transitions.isRunning&&this.preventRunning?(t.preventDefault(), void t.stopPropagation()):void this.go(this.dom.getHref(n), n, t);
    }, e.D=function(t) {
      this.go(this.url.getHref(), 'popstate', t);
    }, e.I=function(t) {
      for (var n=t.target; n&&!this.dom.getHref(n);)n=n.parentNode; if (n&&!this.prevent.checkLink(n, t, this.dom.getHref(n))) return n;
    }, e.q=function() {
      const t=this.url.getHref(); const n={container: this.dom.getContainer(), html: this.dom.getHtml(), namespace: this.dom.getNamespace(), url: r({href: t}, this.url.parse(t))}; this.C={current: n, next: r({}, this.schemaPage), trigger: void 0}, this.hooks.do('reset', this.data);
    }, n(t, [{key: 'data', get: function() {
      return this.C;
    }}, {key: 'wrapper', get: function() {
      return this._;
    }}]), t;
  }());
}));
